{"ast":null,"code":"var _jsxFileName = \"/Users/nainasebastian/Desktop/ReactMaxmillian/react-authentication/frontend/src/pages/Authentication.js\";\nimport AuthForm from '../components/AuthForm';\nimport { jsonify } from '../util/formatter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AuthenticationPage() {\n  return /*#__PURE__*/_jsxDEV(AuthForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 10\n  }, this);\n}\n_c = AuthenticationPage;\nexport default AuthenticationPage;\nexport async function action({\n  request\n}) {\n  const searchParams = new URL(request.url).searchParams;\n  const mode = searchParams.get('mode') || 'login';\n  if (mode !== 'login' || mode !== 'signup') {\n    throw jsonify({\n      message: 'Unsupported mode'\n    }, {\n      status: 422\n    });\n  }\n  const fd = await request.formData();\n  const authData = {\n    email: fd.get('email'),\n    password: fd.get('password')\n  };\n  const response = await fetch('http://localhost:8080/' + mode, {\n    method: 'POST',\n    header: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(authData)\n  });\n  if (response.status === 422 || response.status === 401) {\n    return response;\n  }\n  if (!response.ok) {\n    throw jsonify({\n      message: 'Could not authenticate user.'\n    }, {\n      status: 500\n    });\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"AuthenticationPage\");","map":{"version":3,"names":["AuthForm","jsonify","jsxDEV","_jsxDEV","AuthenticationPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","searchParams","URL","url","mode","get","message","status","fd","formData","authData","email","password","response","fetch","method","header","body","JSON","stringify","ok","$RefreshReg$"],"sources":["/Users/nainasebastian/Desktop/ReactMaxmillian/react-authentication/frontend/src/pages/Authentication.js"],"sourcesContent":["import AuthForm from '../components/AuthForm';\nimport { jsonify } from '../util/formatter';\n\nfunction AuthenticationPage() {\n  return <AuthForm />;\n}\n\nexport default AuthenticationPage;\n\nexport async function action({ request }) {\n  const searchParams = new URL(request.url).searchParams;\n  const mode = searchParams.get('mode') || 'login';\n\n  if (mode !== 'login' || mode !== 'signup') {\n    throw jsonify({ message: 'Unsupported mode' }, { status: 422 });\n  }\n\n  const fd = await request.formData();\n  const authData = {\n    email: fd.get('email'),\n    password: fd.get('password')\n  }\n\n  const response = await fetch('http://localhost:8080/' + mode, {\n    method: 'POST',\n    header: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(authData)\n  });\n\n  if (response.status === 422 || response.status === 401) {\n    return response;\n  }\n\n  if (!response.ok) {\n    throw jsonify({ message: 'Could not authenticate user.' }, { status: 500 });\n  }\n}"],"mappings":";AAAA,OAAOA,QAAQ,MAAM,wBAAwB;AAC7C,SAASC,OAAO,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,kBAAkBA,CAAA,EAAG;EAC5B,oBAAOD,OAAA,CAACH,QAAQ;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACrB;AAACC,EAAA,GAFQL,kBAAkB;AAI3B,eAAeA,kBAAkB;AAEjC,OAAO,eAAeM,MAAMA,CAAC;EAAEC;AAAQ,CAAC,EAAE;EACxC,MAAMC,YAAY,GAAG,IAAIC,GAAG,CAACF,OAAO,CAACG,GAAG,CAAC,CAACF,YAAY;EACtD,MAAMG,IAAI,GAAGH,YAAY,CAACI,GAAG,CAAC,MAAM,CAAC,IAAI,OAAO;EAEhD,IAAID,IAAI,KAAK,OAAO,IAAIA,IAAI,KAAK,QAAQ,EAAE;IACzC,MAAMd,OAAO,CAAC;MAAEgB,OAAO,EAAE;IAAmB,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EACjE;EAEA,MAAMC,EAAE,GAAG,MAAMR,OAAO,CAACS,QAAQ,CAAC,CAAC;EACnC,MAAMC,QAAQ,GAAG;IACfC,KAAK,EAAEH,EAAE,CAACH,GAAG,CAAC,OAAO,CAAC;IACtBO,QAAQ,EAAEJ,EAAE,CAACH,GAAG,CAAC,UAAU;EAC7B,CAAC;EAED,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,wBAAwB,GAAGV,IAAI,EAAE;IAC5DW,MAAM,EAAE,MAAM;IACdC,MAAM,EAAE;MACN,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,QAAQ;EAC/B,CAAC,CAAC;EAEF,IAAIG,QAAQ,CAACN,MAAM,KAAK,GAAG,IAAIM,QAAQ,CAACN,MAAM,KAAK,GAAG,EAAE;IACtD,OAAOM,QAAQ;EACjB;EAEA,IAAI,CAACA,QAAQ,CAACO,EAAE,EAAE;IAChB,MAAM9B,OAAO,CAAC;MAAEgB,OAAO,EAAE;IAA+B,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EAC7E;AACF;AAAC,IAAAT,EAAA;AAAAuB,YAAA,CAAAvB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}